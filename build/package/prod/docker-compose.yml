services:
  hmtm_sso:
    container_name: hmtm_sso
    image: hmtm_sso
    build:
      context: ../../..
      dockerfile: ./build/package/Dockerfile
    ports:
      - "${HMTM_SSO_OUTER_PORT}:${HMTM_SSO_INNER_PORT}"
    depends_on:
      - hmtm_sso_database
    volumes:
      - ../../../logs/:/app/logs/
    networks:
      - hmtm_network

  hmtm_sso_database:
    container_name: hmtm_sso_database
    hostname: hmtm_sso_database
    image: postgres
    restart: always
    env_file:
      - ../../../.env
    volumes:
      - ../../../postgres_data:/var/lib/postgresql/data
      - ../../../postgres_backups:/backups
      - ../../../scripts/postgres:/scripts
    ports:
      - "${HMTM_SSO_DB_OUTER_PORT}:${HMTM_SSO_DB_INNER_PORT}"
    networks:
      - hmtm_network

  hmtm_sso_cache:
    container_name: hmtm_sso_cache
    hostname: hmtm_sso_cache
    image: redis:latest
    env_file:
      - ../../../.env
    ports:
      - "${HMTM_SSO_CACHE_OUTER_PORT}:${HMTM_SSO_CACHE_INNER_PORT}"
    volumes:
      - ../../../redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    command: redis-server --requirepass ${HMTM_SSO_CACHE_PASSWORD}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$HMTM_SSO_CACHE_PASSWORD", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: unless-stopped
    tty: true
    stdin_open: true
    networks:
      - hmtm_network

networks:
  hmtm_network:
    name: hmtm_network
    external: true
